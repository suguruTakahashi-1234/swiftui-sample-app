name: Notify Reviewers on Successful Checks

on:
  check_suite:
    types:
      - completed

jobs:
  notify_reviewers:
    runs-on: ubuntu-latest
    if: ${{ github.event.check_suite.conclusion == 'success' }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Notify Reviewers on Slack
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        # Get pull request information from the check_suite event
        PR_URL="${{ github.event.check_suite.pull_requests[0].html_url }}"
        PR_TITLE="${{ github.event.check_suite.pull_requests[0].title }}"
        PR_AUTHOR="${{ github.event.check_suite.pull_requests[0].user.login }}"
        PR_NUMBER="${{ github.event.check_suite.pull_requests[0].number }}"

        # Fetch the requested reviewers who have not yet approved the pull request
        echo "Fetching requested reviewers..."
        REVIEWERS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/reviews \
          | jq -r '.[] | select(.state!="APPROVED" and .state!="COMMENTED" and .state!="CHANGES_REQUESTED") | .user.login')

        # Exit early if there are no reviewers or all reviewers have approved
        if [ -z "$REVIEWERS" ]; then
          echo "No reviewers found or all reviewers have already submitted a review."
          exit 0
        fi

        # Fetch the Slack usernames for the GitHub reviewers using the mapping file
        echo "Fetching slack usernames..."
        SLACK_USERNAMES=""
        for REVIEWER in $REVIEWERS
        do
          SLACK_USERNAME=$(jq -r --arg github_user "$REVIEWER" '.[$github_user]' .github/github_to_slack_mapping.json)
          if [ "$SLACK_USERNAME" != "null" ]; then
            SLACK_USERNAMES="$SLACK_USERNAMES @$SLACK_USERNAME"
          fi
        done

        # Exit early if there are no corresponding Slack usernames
        if [ -z "$SLACK_USERNAMES" ]; then
          echo "No slack usernames found."
          exit 0
        fi

        # Create the message to be sent to Slack
        MESSAGE="$SLACK_USERNAMES レビューをお願いします。\nPR の CI が通りました。\n\n$PR_TITLE\n$PR_URL\n\nby @$PR_AUTHOR"

        # Send the message to Slack
        echo "Sending message to slack..."
        curl -X POST -H 'Content-type: application/json' --data "{'text':'$MESSAGE'}" $SLACK_WEBHOOK_URL
